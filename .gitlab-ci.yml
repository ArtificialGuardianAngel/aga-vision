variables:
  PROJECT_PATH: "/home/gitlab-runner/projects/aga.vision"
  DEPLOY_PATH: "/home/gitlab-runner/deployments/aga.vision"
  BACKUP_PATH: "/home/gitlab-runner/backups/aga.vision"
  NGINX_CONF: "./nginx.conf"

stages:
  - install
  - test
  - deploy
  - rollback

install:
  stage: install
  script:
    - find . ! -name 'node_modules' -type f -exec rm -f {} +
    - cp -r ./* $PROJECT_PATH
    - cd $PROJECT_PATH
    - npm install

test:
  stage: test
  script:
    - cd $PROJECT_PATH
    - npm test

deploy:
  stage: deploy
  script:
    - cd $PROJECT_PATH
    - sudo cp $NGINX_CONF /etc/nginx/sites-available/aga.vision
    - echo NEXT_PUBLIC_DISCORD_URL=$NEXT_PUBLIC_DISCORD_URL >> .env
    - echo NEXT_PUBLIC_GITHUB_URL=$NEXT_PUBLIC_GITHUB_URL >> .env
    - echo NEXT_PUBLIC_HACKADAY_URL=$NEXT_PUBLIC_HACKADAY_URL >> .env
    - echo NEXT_PUBLIC_BLUEPRINT_URL=$NEXT_PUBLIC_BLUEPRINT_URL >> .env
    - echo NEXT_SLACK_API_KEY=$NEXT_SLACK_API_KEY >> .env
    - cat .env
    - if [ -d $DEPLOY_PATH ]; then sudo mkdir $BACKUP_PATH/$CI_COMMIT_SHORT_SHA && sudo mv $DEPLOY_PATH $BACKUP_PATH/$CI_COMMIT_SHORT_SHA; fi
    - sudo rsync -av --progress . $DEPLOY_PATH --exclude deploy
    - npm run build
    - pm2 start ecosystem.config.js
    - pm2 save
  environment:
    name: production
  only:
    - main

rollback:
  stage: rollback
  script:
    - cd $PROJECT_PATH
    - LAST_DEPLOY=$(ls -td -- $BACKUP_PATH/* | head -n 1)
    - sudo rm -rf $DEPLOY_PATH
    - sudo mkdir $DEPLOY_PATH
    - sudo mv $LAST_DEPLOY $DEPLOY_PATH
    - pm2 start ecosystem.config.js
    - pm2 save
  when: manual
  environment:
    name: production
